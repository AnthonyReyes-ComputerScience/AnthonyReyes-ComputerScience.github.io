{"version":3,"sources":["components/users/allusers.js","components/about/index.js","components/notfound/index.js","registerServiceWorker.js","index.js"],"names":["AllUsers","props","vis","useState","members","addUserVisible","addUserFirstName","addUserLastName","addUserEmail","state","setState","hideAddUserModal","prev","refreshUsers","fetch","then","res","json","useEffect","className","onClick","map","member","key","id","name","surname","email","method","headers","Accept","body","JSON","stringify","console","log","deleteUser","style","display","placeholder","value","onChange","e","target","persist","FirstName","LastName","Email","length","About","NotFound","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","routes","App","routeResult","useRoutes","cursor","navigate","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ab8cc415.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\n\nconst AllUsers = (props) => {\n\n      // console.log(props)\n      const [state, setState] = useState({\n        members: [],\n        addUserVisible: false,\n        addUserFirstName: \"\",\n        addUserLastName: \"\",\n        addUserEmail: \"\",\n      });\n      // this.logChange = this.logChange.bind(this);\n\n  // logChange(e) {\n  //       this.setState({[e.target.name]: e.target.value});  \n  //   }\n\n    const showAddUserModal = () => {\n      setState((prev) => ({...prev, addUserVisible: true }))\n    }\n    const hideAddUserModal = () => {\n      setState((prev) => ({...prev, addUserVisible: false }))\n    }\n    const refreshUsers = () => {\n      fetch('/users')\n        .then(res => res.json())\n        .then(members => setState((prev) => ({...prev, members: members })));\n    }\n    const deleteUser = (member) => {\n      fetch('/deleteUser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          member\n        })\n      }).then(res => console.log(res)).then(refreshUsers)\n    }\n\n    const addUserStyle = (vis) => {\n      let style = vis ? \"block\" : \"none\";\n      return style\n    }\n    const submitUser = () => {\n      fetch('/addUser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          FirstName: state.addUserFirstName,\n          LastName: state.addUserLastName,\n          Email: state.addUserEmail,\n          id: ((state.members).length + 5),\n        })\n      }).then(res => console.log(res)).then(refreshUsers);\n      setState((prev) => ({\n        ...prev, addUserFirstName: '', addUserLastName: '', addUserEmail: ''}))\n      hideAddUserModal();\n    }\n    \n    useEffect(() => {\n      refreshUsers()\n    }, []);\n    return (\n      <div>\n        <div className=\"Users container\">\n          <h1>Users</h1>\n          <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Member name</th>\n              <th>Member email</th>\n              <th>Action</th>\n                <th><button className=\"addbutton\" onClick={() => {showAddUserModal()}}>Add user</button></th>\n            </tr>\n          </thead>\n          <tbody>\n              {(state.members).map(member =>\n                <tr key={member.id}>\n                  <td>{member.name} {member.surname}</td>\n                  <td>{member.email}</td>\n                  <td><button className=\"btn btn-primary\">Edit</button> <button className=\"btn btn-danger\" onClick={()=> deleteUser(member)}>Delete</button></td>\n                </tr>\n              )}\n          </tbody>\n          </table>\n        </div>\n        <div style={{ display: addUserStyle(state.addUserVisible)}}>\n          <section className=\"modal-main\">\n            <input placeholder=\"First Name\" \n              value={state.addUserFirstName}\n              onChange={(e) => {\n                setState((prev) => ({ ...prev, addUserFirstName: e.target.value} ));  \n                e.persist()\n            }}/>\n            <input placeholder=\"Last Name\"\n              value={state.addUserLastName}\n              onChange={(e) => {\n                setState((prev) => ({ ...prev, addUserLastName: e.target.value }));\n                e.persist()\n              }} />\n            <input placeholder=\"Email\"\n              value={state.addUserEmail}\n              onChange={(e) => {\n                setState((prev) => ({ ...prev, addUserEmail: e.target.value }));\n                e.persist()\n              }} />\n              <button onClick={()=>{submitUser()}}>ADD THIS USER</button>\n            \n            <button onClick={()=>{hideAddUserModal()}}>close</button>\n          </section>\n        </div>\n      </div>\n        \n    );\n}\n\nexport default AllUsers\n","import React from 'react';\nimport './style.css';\n\nconst About = () => {\n    return (\n      <div >\n        <h1>\n          About\n        </h1>\n      </div>\n    );\n};\n\nexport default About;","import React, { Component } from 'react';\n\nimport './style.css';\n\nexport default class NotFound extends Component {\n  // static propTypes = {}\n  // static defaultProps = {}\n  // state = {}\n\n  render() {\n    return (\n      <div>\n        <h1>\n          404 <small>Not Found :(</small>\n        </h1>\n      </div>\n    );\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AllUsers from './components/users/allusers'\nimport About from './components/about/index'\nimport NotFound from './components/notfound/index'\nimport { useRoutes, navigate } from 'hookrouter';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst routes = {\n  \"/\": () => <AllUsers />,\n  \"/about\": () => <About/>,\n  \"/*\": () => <NotFound/>\n};\n\nconst App = () => {\n  const routeResult = useRoutes(routes);\n\n  return (\n    <div>\n      <span style={{cursor: \"pointer\"}} onClick={() => {navigate('/about')}}> About </span>\n      <span style={{ cursor: \"pointer\" }} onClick={() => { navigate('/')}}> Home </span>\n      <div>\n        {routeResult}\n      </div>\n    </div>\n  );\n\n}\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}